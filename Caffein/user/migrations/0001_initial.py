# Generated by Django 3.1.1 on 2020-11-15 03:39

from django.db import migrations, models
import user.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('store', '0007_auto_20201103_2318'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CaffeInUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('user_id', models.CharField(max_length=20, unique=True, verbose_name='아이디')),
                ('uid', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True, verbose_name='유저 UID')),
                ('username', models.CharField(max_length=10, verbose_name='이름')),
                ('user_phone', models.CharField(max_length=20, null=True, verbose_name='전화번호')),
                ('cafeloca', models.TextField(max_length=20, null=True, verbose_name='카페주소')),
                ('date_joined', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_joined')),
                ('last_login', models.DateTimeField(auto_now=True, null=True, verbose_name='last_login')),
                ('is_owner', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('likes', models.ManyToManyField(related_name='likers', to='store.Store')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '카페인 유저',
                'verbose_name_plural': '카페인 유저들',
                'db_table': 'users',
            },
            managers=[
                ('objects', user.models.CaffeInUserManager()),
            ],
        ),
    ]
